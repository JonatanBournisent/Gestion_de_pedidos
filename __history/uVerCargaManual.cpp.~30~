//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "uVerCargaManual.h"
#include "uVerHistorialPedidos.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TfVerCargaManual *fVerCargaManual;
//---------------------------------------------------------------------------
__fastcall TfVerCargaManual::TfVerCargaManual(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TfVerCargaManual::FormShow(TObject *Sender)
{
   TIniFile *Configuraciones;
   String Dir = GetCurrentDir()+"//Config.ini";
   Configuraciones = new TIniFile(Dir);

   SQLConnection1->Params->Values["HostName"] = Configuraciones->ReadString("MySQLServer","Servidor", "127.0.0.1");
   SQLConnection1->Params->Values["User_Name"] = "elsembrador";
   SQLConnection1->Params->Values["Password"] = "*-elsembrador63/*";

   delete Configuraciones;

   ClientDataSet3->Active = false;
   QueryCantidad->Close();
   QueryCantidad->SQL->Clear();
   String q;

   q = "SELECT idCantidad, refCliente, nroBandejas AS bandGrand, nroUnidades AS cantViandas, txtComplemento AS complemento, (sectorReparto + 1) AS reparto, "
	   "(SELECT descripcion FROM repartidores WHERE repartidores.idRepartidor = cantidades.refRepartidor LIMIT 1) AS repartidor, "
	   "(SELECT CONCAT(calle, ' ' ,numero) FROM clientes WHERE clientes.idCliente = cantidades.refCliente LIMIT 1) AS cliente "
	   "FROM cantidades WHERE cargaManual = 1 AND fecha = :fecha "
	   "ORDER BY repartidor, reparto";


   QueryCantidad->SQL->Add(q);
   QueryCantidad->ParamByName("fecha")->AsDate = MC->Date;
   QueryCantidad->Open();
   ClientDataSet3->Active = true;

   ShowScrollBar(DBGrid1->Handle, SB_VERT, true);
}
//---------------------------------------------------------------------------
void __fastcall TfVerCargaManual::FormClose(TObject *Sender, TCloseAction &Action)

{
   ClientDataSet3->Active = false;
   QueryCantidad->Close();
   SQLConnection1->Close();
}
//---------------------------------------------------------------------------
void __fastcall TfVerCargaManual::Button1Click(TObject *Sender)
{
   Close();
}
//---------------------------------------------------------------------------
void __fastcall TfVerCargaManual::DBGrid1DrawColumnCell(TObject *Sender, const TRect &Rect,
          int DataCol, TColumn *Column, TGridDrawState State)
{
   if(State.Contains(gdSelected))
   {
	  dynamic_cast <TDBGrid *>(Sender)->Canvas->Font->Color = clWhite;
	  dynamic_cast <TDBGrid *>(Sender)->Canvas->Brush->Color = TColor(0x00C07000);
   }
   else
   {
	  if(dynamic_cast <TDBGrid *>(Sender)->DataSource->DataSet->RecNo % 2)
		 dynamic_cast <TDBGrid *>(Sender)->Canvas->Brush->Color = TColor(0x00D9D9D9);
	   else
		 dynamic_cast <TDBGrid *>(Sender)->Canvas->Brush->Color = TColor(0x00F2F2F2);
   }
   dynamic_cast <TDBGrid *>(Sender)->DefaultDrawColumnCell(Rect, DataCol, Column, State);
}
//---------------------------------------------------------------------------

void __fastcall TfVerCargaManual::DBGrid1DblClick(TObject *Sender)
{
   fVerHistorialPedidos->idCliente = ClientDataSet3->FieldByName("refCliente")->AsInteger;
   fVerHistorialPedidos->ShowModal();
}
//---------------------------------------------------------------------------

